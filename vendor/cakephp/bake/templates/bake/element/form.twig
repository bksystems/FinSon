{#
/**
 * CakePHP(tm) : Rapid Development Framework (http://cakephp.org)
 * Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)
 *
 * Licensed under The MIT License
 * For full copyright and license information, please see the LICENSE.txt
 * Redistributions of files must retain the above copyright notice.
 *
 * @copyright     Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)
 * @link          http://cakephp.org CakePHP(tm) Project
 * @since         2.0.0
 * @license       http://www.opensource.org/licenses/mit-license.php MIT License
 */
#}


<div class="row">
    <div class="col-md-12">
        <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item active" aria-current="page">{{ pluralVar }}</li>
        </ol>
        </nav>
    </div>
</div>

<div class="row">
    <div class="col-md-2">
        <div class="card" style="font-size:14px;">
            <div class="card-header">Submenu</div>
                <ul class="list-group list-group-flush">
{% set fields = Bake.filterFields(fields, schema, modelObject) %}  
{% if 'add' not in action %}
                    <?= $this->Form->postLink(
                                    __('Eliminar'),
                                    ['action' => 'delete', ${{ singularVar }}->{{ primaryKey[0] }}],
                                    ['confirm' => __('Are you sure you want to delete # {0}?', ${{ singularVar }}->{{ primaryKey[0] }}), 'class' => 'list-group-item']
                                ) ?>
{% endif %}
                    <?= $this->Html->link(__('List {{ pluralHumanName }}'), ['action' => 'index'], ['class' => 'list-group-item']) ?>
{{- "\n" }}
{%- set done = [] %} 
                </ul>
            </div>
        </div>
    <div class="col-md-10">
        <div class="card">
            <div class="card-header">
                <?= __('{{ action|humanize }} {{ singularHumanName }}') ?>
            </div>
            <div class="card-body">
                <?= $this->Form->create(${{ singularVar }}) ?>
                <fieldset>
                    <?php
{% for field in fields %}
{%- if field not in primaryKey %}
    {%- if keyFields[field] is defined %}
        {%- set fieldData = Bake.columnData(field, schema) %}
        {%- if fieldData.null %}
                    echo $this->Form->control('{{ field }}', ['options' => ${{ keyFields[field] }}, 'empty' => true, 'class' => 'form-control form-control-sm']);
                    {{- "\n" }}
        {%- else %}
                    echo $this->Form->control('{{ field }}', ['options' => ${{ keyFields[field] }},  'class' => 'form-control form-control-sm']);
                    {{- "\n" }}
        {%- endif %}
    {%- elseif field not in ['created', 'modified', 'updated'] %}
        {%- set fieldData = Bake.columnData(field, schema) %}
        {%- if fieldData.type in ['date', 'datetime', 'time'] and fieldData.null %}
                    echo $this->Form->control('{{ field }}', ['empty' => true,  'class' => 'form-control form-control-sm']);
                    {{- "\n" }}
        {%- else %}
                    echo $this->Form->control('{{ field }}', [ 'class' => 'form-control form-control-sm']);
                    {{- "\n" }}
        {%- endif %}
    {%- endif %}
{%- endif %}
{%- endfor %}

{%- if associations.BelongsToMany is defined %}
{%- for assocName, assocData in associations.BelongsToMany %}
                    echo $this->Form->control('{{ assocData.property }}._ids', ['options' => ${{ assocData.variable }},  'class' => 'form-control form-control-sm']);
                    {{- "\n" }}
{%- endfor %}
{% endif %}
                    ?>
                </fieldset>
                <br>
                <?= $this->Form->button(__('Guardar'), ['class' => 'btn btn-success']) ?>
                <?= $this->Form->end() ?>
            </div>
        </div>
    </div>
</div>
